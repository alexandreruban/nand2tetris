// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:

    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

    And(a=notsel0, b=notsel1, out=notsel0andnotsel1);
    And(a=notsel0andnotsel1, b=notsel2, out=notsel0andnotsel1andnotsel2);
    And(a=in, b=notsel0andnotsel1andnotsel2, out=a);

    And(a=sel[0], b=notsel1, out=sel0andnotsel1);
    And(a=sel0andnotsel1, b=notsel2, out=sel0andnotsel1andnotsel2);
    And(a=in, b=sel0andnotsel1andnotsel2, out=b);

    And(a=notsel0, b=sel[1], out=notsel0andsel1);
    And(a=notsel0andsel1, b=notsel2, out=notsel0andsel1andnotsel2);
    And(a=in, b=notsel0andsel1andnotsel2, out=c);

    And(a=sel[0], b=sel[1], out=sel0andsel1);
    And(a=sel0andsel1, b=notsel2, out=sel0andsel1andnotsel2);
    And(a=in, b=sel0andsel1andnotsel2, out=d);

    And(a=notsel0andnotsel1, b=sel[2], out=notsel0andnotsel1andsel2);
    And(a=in, b=notsel0andnotsel1andsel2, out=e);

    And(a=sel0andnotsel1, b=sel[2], out=sel0andnotsel1andsel2);
    And(a=in, b=sel0andnotsel1andsel2, out=f);

    And(a=notsel0andsel1, b=sel[2], out=notsel0andsel1andsel2);
    And(a=in, b=notsel0andsel1andsel2, out=g);

    And(a=sel0andsel1, b=sel[2], out=sel0andsel1andsel2);
    And(a=in, b=sel0andsel1andsel2, out=h);
}
